
b3:     file format elf32-i386


Disassembly of section .init:

00000544 <_init>:
 544:	53                   	push   %ebx
 545:	83 ec 08             	sub    $0x8,%esp
 548:	e8 43 01 00 00       	call   690 <__x86.get_pc_thunk.bx>
 54d:	81 c3 5f 1a 00 00    	add    $0x1a5f,%ebx
 553:	8b 83 44 00 00 00    	mov    0x44(%ebx),%eax
 559:	85 c0                	test   %eax,%eax
 55b:	74 05                	je     562 <_init+0x1e>
 55d:	e8 e6 00 00 00       	call   648 <__gmon_start__@plt>
 562:	83 c4 08             	add    $0x8,%esp
 565:	5b                   	pop    %ebx
 566:	c3                   	ret    

Disassembly of section .plt:

00000570 <.plt>:
 570:	ff b3 04 00 00 00    	pushl  0x4(%ebx)
 576:	ff a3 08 00 00 00    	jmp    *0x8(%ebx)
 57c:	00 00                	add    %al,(%eax)
	...

00000580 <free@plt>:
 580:	ff a3 0c 00 00 00    	jmp    *0xc(%ebx)
 586:	68 00 00 00 00       	push   $0x0
 58b:	e9 e0 ff ff ff       	jmp    570 <.plt>

00000590 <fgets@plt>:
 590:	ff a3 10 00 00 00    	jmp    *0x10(%ebx)
 596:	68 08 00 00 00       	push   $0x8
 59b:	e9 d0 ff ff ff       	jmp    570 <.plt>

000005a0 <sleep@plt>:
 5a0:	ff a3 14 00 00 00    	jmp    *0x14(%ebx)
 5a6:	68 10 00 00 00       	push   $0x10
 5ab:	e9 c0 ff ff ff       	jmp    570 <.plt>

000005b0 <__stack_chk_fail@plt>:
 5b0:	ff a3 18 00 00 00    	jmp    *0x18(%ebx)
 5b6:	68 18 00 00 00       	push   $0x18
 5bb:	e9 b0 ff ff ff       	jmp    570 <.plt>

000005c0 <malloc@plt>:
 5c0:	ff a3 1c 00 00 00    	jmp    *0x1c(%ebx)
 5c6:	68 20 00 00 00       	push   $0x20
 5cb:	e9 a0 ff ff ff       	jmp    570 <.plt>

000005d0 <puts@plt>:
 5d0:	ff a3 20 00 00 00    	jmp    *0x20(%ebx)
 5d6:	68 28 00 00 00       	push   $0x28
 5db:	e9 90 ff ff ff       	jmp    570 <.plt>

000005e0 <exit@plt>:
 5e0:	ff a3 24 00 00 00    	jmp    *0x24(%ebx)
 5e6:	68 30 00 00 00       	push   $0x30
 5eb:	e9 80 ff ff ff       	jmp    570 <.plt>

000005f0 <__libc_start_main@plt>:
 5f0:	ff a3 28 00 00 00    	jmp    *0x28(%ebx)
 5f6:	68 38 00 00 00       	push   $0x38
 5fb:	e9 70 ff ff ff       	jmp    570 <.plt>

00000600 <fopen@plt>:
 600:	ff a3 2c 00 00 00    	jmp    *0x2c(%ebx)
 606:	68 40 00 00 00       	push   $0x40
 60b:	e9 60 ff ff ff       	jmp    570 <.plt>

00000610 <__printf_chk@plt>:
 610:	ff a3 30 00 00 00    	jmp    *0x30(%ebx)
 616:	68 48 00 00 00       	push   $0x48
 61b:	e9 50 ff ff ff       	jmp    570 <.plt>

00000620 <strtol@plt>:
 620:	ff a3 34 00 00 00    	jmp    *0x34(%ebx)
 626:	68 50 00 00 00       	push   $0x50
 62b:	e9 40 ff ff ff       	jmp    570 <.plt>

00000630 <__assert_fail@plt>:
 630:	ff a3 38 00 00 00    	jmp    *0x38(%ebx)
 636:	68 58 00 00 00       	push   $0x58
 63b:	e9 30 ff ff ff       	jmp    570 <.plt>

Disassembly of section .plt.got:

00000640 <__cxa_finalize@plt>:
 640:	ff a3 40 00 00 00    	jmp    *0x40(%ebx)
 646:	66 90                	xchg   %ax,%ax

00000648 <__gmon_start__@plt>:
 648:	ff a3 44 00 00 00    	jmp    *0x44(%ebx)
 64e:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00000650 <_start>:
 650:	31 ed                	xor    %ebp,%ebp
 652:	5e                   	pop    %esi
 653:	89 e1                	mov    %esp,%ecx
 655:	83 e4 f0             	and    $0xfffffff0,%esp
 658:	50                   	push   %eax
 659:	54                   	push   %esp
 65a:	52                   	push   %edx
 65b:	e8 22 00 00 00       	call   682 <_start+0x32>
 660:	81 c3 4c 19 00 00    	add    $0x194c,%ebx
 666:	8d 83 44 eb ff ff    	lea    -0x14bc(%ebx),%eax
 66c:	50                   	push   %eax
 66d:	8d 83 e4 ea ff ff    	lea    -0x151c(%ebx),%eax
 673:	50                   	push   %eax
 674:	51                   	push   %ecx
 675:	56                   	push   %esi
 676:	ff b3 4c 00 00 00    	pushl  0x4c(%ebx)
 67c:	e8 6f ff ff ff       	call   5f0 <__libc_start_main@plt>
 681:	f4                   	hlt    
 682:	8b 1c 24             	mov    (%esp),%ebx
 685:	c3                   	ret    
 686:	66 90                	xchg   %ax,%ax
 688:	66 90                	xchg   %ax,%ax
 68a:	66 90                	xchg   %ax,%ax
 68c:	66 90                	xchg   %ax,%ax
 68e:	66 90                	xchg   %ax,%ax

00000690 <__x86.get_pc_thunk.bx>:
 690:	8b 1c 24             	mov    (%esp),%ebx
 693:	c3                   	ret    
 694:	66 90                	xchg   %ax,%ax
 696:	66 90                	xchg   %ax,%ax
 698:	66 90                	xchg   %ax,%ax
 69a:	66 90                	xchg   %ax,%ax
 69c:	66 90                	xchg   %ax,%ax
 69e:	66 90                	xchg   %ax,%ax

000006a0 <deregister_tm_clones>:
 6a0:	e8 e4 00 00 00       	call   789 <__x86.get_pc_thunk.dx>
 6a5:	81 c2 07 19 00 00    	add    $0x1907,%edx
 6ab:	8d 8a 70 00 00 00    	lea    0x70(%edx),%ecx
 6b1:	8d 82 70 00 00 00    	lea    0x70(%edx),%eax
 6b7:	39 c8                	cmp    %ecx,%eax
 6b9:	74 1d                	je     6d8 <deregister_tm_clones+0x38>
 6bb:	8b 82 3c 00 00 00    	mov    0x3c(%edx),%eax
 6c1:	85 c0                	test   %eax,%eax
 6c3:	74 13                	je     6d8 <deregister_tm_clones+0x38>
 6c5:	55                   	push   %ebp
 6c6:	89 e5                	mov    %esp,%ebp
 6c8:	83 ec 14             	sub    $0x14,%esp
 6cb:	51                   	push   %ecx
 6cc:	ff d0                	call   *%eax
 6ce:	83 c4 10             	add    $0x10,%esp
 6d1:	c9                   	leave  
 6d2:	c3                   	ret    
 6d3:	90                   	nop
 6d4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 6d8:	f3 c3                	repz ret 
 6da:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000006e0 <register_tm_clones>:
 6e0:	e8 a4 00 00 00       	call   789 <__x86.get_pc_thunk.dx>
 6e5:	81 c2 c7 18 00 00    	add    $0x18c7,%edx
 6eb:	55                   	push   %ebp
 6ec:	8d 8a 70 00 00 00    	lea    0x70(%edx),%ecx
 6f2:	8d 82 70 00 00 00    	lea    0x70(%edx),%eax
 6f8:	29 c8                	sub    %ecx,%eax
 6fa:	89 e5                	mov    %esp,%ebp
 6fc:	53                   	push   %ebx
 6fd:	c1 f8 02             	sar    $0x2,%eax
 700:	89 c3                	mov    %eax,%ebx
 702:	83 ec 04             	sub    $0x4,%esp
 705:	c1 eb 1f             	shr    $0x1f,%ebx
 708:	01 d8                	add    %ebx,%eax
 70a:	d1 f8                	sar    %eax
 70c:	74 14                	je     722 <register_tm_clones+0x42>
 70e:	8b 92 50 00 00 00    	mov    0x50(%edx),%edx
 714:	85 d2                	test   %edx,%edx
 716:	74 0a                	je     722 <register_tm_clones+0x42>
 718:	83 ec 08             	sub    $0x8,%esp
 71b:	50                   	push   %eax
 71c:	51                   	push   %ecx
 71d:	ff d2                	call   *%edx
 71f:	83 c4 10             	add    $0x10,%esp
 722:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 725:	c9                   	leave  
 726:	c3                   	ret    
 727:	89 f6                	mov    %esi,%esi
 729:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00000730 <__do_global_dtors_aux>:
 730:	55                   	push   %ebp
 731:	89 e5                	mov    %esp,%ebp
 733:	53                   	push   %ebx
 734:	e8 57 ff ff ff       	call   690 <__x86.get_pc_thunk.bx>
 739:	81 c3 73 18 00 00    	add    $0x1873,%ebx
 73f:	83 ec 04             	sub    $0x4,%esp
 742:	80 bb 70 00 00 00 00 	cmpb   $0x0,0x70(%ebx)
 749:	75 27                	jne    772 <__do_global_dtors_aux+0x42>
 74b:	8b 83 40 00 00 00    	mov    0x40(%ebx),%eax
 751:	85 c0                	test   %eax,%eax
 753:	74 11                	je     766 <__do_global_dtors_aux+0x36>
 755:	83 ec 0c             	sub    $0xc,%esp
 758:	ff b3 58 00 00 00    	pushl  0x58(%ebx)
 75e:	e8 dd fe ff ff       	call   640 <__cxa_finalize@plt>
 763:	83 c4 10             	add    $0x10,%esp
 766:	e8 35 ff ff ff       	call   6a0 <deregister_tm_clones>
 76b:	c6 83 70 00 00 00 01 	movb   $0x1,0x70(%ebx)
 772:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 775:	c9                   	leave  
 776:	c3                   	ret    
 777:	89 f6                	mov    %esi,%esi
 779:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00000780 <frame_dummy>:
 780:	55                   	push   %ebp
 781:	89 e5                	mov    %esp,%ebp
 783:	5d                   	pop    %ebp
 784:	e9 57 ff ff ff       	jmp    6e0 <register_tm_clones>

00000789 <__x86.get_pc_thunk.dx>:
 789:	8b 14 24             	mov    (%esp),%edx
 78c:	c3                   	ret    

0000078d <bomb>:
 78d:	53                   	push   %ebx
 78e:	83 ec 14             	sub    $0x14,%esp
 791:	e8 fa fe ff ff       	call   690 <__x86.get_pc_thunk.bx>
 796:	81 c3 16 18 00 00    	add    $0x1816,%ebx
 79c:	6a 01                	push   $0x1
 79e:	e8 fd fd ff ff       	call   5a0 <sleep@plt>
 7a3:	8d 83 84 eb ff ff    	lea    -0x147c(%ebx),%eax
 7a9:	89 04 24             	mov    %eax,(%esp)
 7ac:	e8 1f fe ff ff       	call   5d0 <puts@plt>
 7b1:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 7b8:	e8 23 fe ff ff       	call   5e0 <exit@plt>

000007bd <success>:
 7bd:	53                   	push   %ebx
 7be:	83 ec 14             	sub    $0x14,%esp
 7c1:	e8 ca fe ff ff       	call   690 <__x86.get_pc_thunk.bx>
 7c6:	81 c3 e6 17 00 00    	add    $0x17e6,%ebx
 7cc:	6a 01                	push   $0x1
 7ce:	e8 cd fd ff ff       	call   5a0 <sleep@plt>
 7d3:	8d 83 92 eb ff ff    	lea    -0x146e(%ebx),%eax
 7d9:	89 04 24             	mov    %eax,(%esp)
 7dc:	e8 ef fd ff ff       	call   5d0 <puts@plt>
 7e1:	83 c4 18             	add    $0x18,%esp
 7e4:	5b                   	pop    %ebx
 7e5:	c3                   	ret    

000007e6 <insert1>:
 7e6:	53                   	push   %ebx
 7e7:	83 ec 14             	sub    $0x14,%esp
 7ea:	e8 a1 fe ff ff       	call   690 <__x86.get_pc_thunk.bx>
 7ef:	81 c3 bd 17 00 00    	add    $0x17bd,%ebx
 7f5:	6a 08                	push   $0x8
 7f7:	e8 c4 fd ff ff       	call   5c0 <malloc@plt>
 7fc:	83 c4 10             	add    $0x10,%esp
 7ff:	85 c0                	test   %eax,%eax
 801:	74 1a                	je     81d <insert1+0x37>
 803:	8b 54 24 10          	mov    0x10(%esp),%edx
 807:	89 10                	mov    %edx,(%eax)
 809:	8b 93 74 00 00 00    	mov    0x74(%ebx),%edx
 80f:	89 50 04             	mov    %edx,0x4(%eax)
 812:	89 83 74 00 00 00    	mov    %eax,0x74(%ebx)
 818:	83 c4 08             	add    $0x8,%esp
 81b:	5b                   	pop    %ebx
 81c:	c3                   	ret    
 81d:	8d 83 d0 eb ff ff    	lea    -0x1430(%ebx),%eax
 823:	50                   	push   %eax
 824:	6a 15                	push   $0x15
 826:	8d 83 9b eb ff ff    	lea    -0x1465(%ebx),%eax
 82c:	50                   	push   %eax
 82d:	8d 83 a4 eb ff ff    	lea    -0x145c(%ebx),%eax
 833:	50                   	push   %eax
 834:	e8 f7 fd ff ff       	call   630 <__assert_fail@plt>

00000839 <insert2>:
 839:	53                   	push   %ebx
 83a:	83 ec 14             	sub    $0x14,%esp
 83d:	e8 4e fe ff ff       	call   690 <__x86.get_pc_thunk.bx>
 842:	81 c3 6a 17 00 00    	add    $0x176a,%ebx
 848:	6a 08                	push   $0x8
 84a:	e8 71 fd ff ff       	call   5c0 <malloc@plt>
 84f:	83 c4 10             	add    $0x10,%esp
 852:	85 c0                	test   %eax,%eax
 854:	74 22                	je     878 <insert2+0x3f>
 856:	8b 54 24 10          	mov    0x10(%esp),%edx
 85a:	89 10                	mov    %edx,(%eax)
 85c:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
 863:	8b 93 74 00 00 00    	mov    0x74(%ebx),%edx
 869:	85 d2                	test   %edx,%edx
 86b:	74 27                	je     894 <insert2+0x5b>
 86d:	8b 4a 04             	mov    0x4(%edx),%ecx
 870:	85 c9                	test   %ecx,%ecx
 872:	75 2a                	jne    89e <insert2+0x65>
 874:	89 d1                	mov    %edx,%ecx
 876:	eb 2d                	jmp    8a5 <insert2+0x6c>
 878:	8d 83 c8 eb ff ff    	lea    -0x1438(%ebx),%eax
 87e:	50                   	push   %eax
 87f:	6a 1d                	push   $0x1d
 881:	8d 83 9b eb ff ff    	lea    -0x1465(%ebx),%eax
 887:	50                   	push   %eax
 888:	8d 83 a4 eb ff ff    	lea    -0x145c(%ebx),%eax
 88e:	50                   	push   %eax
 88f:	e8 9c fd ff ff       	call   630 <__assert_fail@plt>
 894:	89 83 74 00 00 00    	mov    %eax,0x74(%ebx)
 89a:	eb 0c                	jmp    8a8 <insert2+0x6f>
 89c:	89 d1                	mov    %edx,%ecx
 89e:	8b 51 04             	mov    0x4(%ecx),%edx
 8a1:	85 d2                	test   %edx,%edx
 8a3:	75 f7                	jne    89c <insert2+0x63>
 8a5:	89 41 04             	mov    %eax,0x4(%ecx)
 8a8:	83 c4 08             	add    $0x8,%esp
 8ab:	5b                   	pop    %ebx
 8ac:	c3                   	ret    

000008ad <pop>:
 8ad:	56                   	push   %esi
 8ae:	53                   	push   %ebx
 8af:	83 ec 10             	sub    $0x10,%esp
 8b2:	e8 d9 fd ff ff       	call   690 <__x86.get_pc_thunk.bx>
 8b7:	81 c3 f5 16 00 00    	add    $0x16f5,%ebx
 8bd:	8b 83 74 00 00 00    	mov    0x74(%ebx),%eax
 8c3:	8b 50 04             	mov    0x4(%eax),%edx
 8c6:	89 93 74 00 00 00    	mov    %edx,0x74(%ebx)
 8cc:	8b 30                	mov    (%eax),%esi
 8ce:	50                   	push   %eax
 8cf:	e8 ac fc ff ff       	call   580 <free@plt>
 8d4:	89 f0                	mov    %esi,%eax
 8d6:	83 c4 14             	add    $0x14,%esp
 8d9:	5b                   	pop    %ebx
 8da:	5e                   	pop    %esi
 8db:	c3                   	ret    

000008dc <dump>:
 8dc:	57                   	push   %edi
 8dd:	56                   	push   %esi
 8de:	53                   	push   %ebx
 8df:	e8 ac fd ff ff       	call   690 <__x86.get_pc_thunk.bx>
 8e4:	81 c3 c8 16 00 00    	add    $0x16c8,%ebx
 8ea:	8b b3 74 00 00 00    	mov    0x74(%ebx),%esi
 8f0:	85 f6                	test   %esi,%esi
 8f2:	74 1d                	je     911 <dump+0x35>
 8f4:	8d bb ae eb ff ff    	lea    -0x1452(%ebx),%edi
 8fa:	83 ec 04             	sub    $0x4,%esp
 8fd:	ff 36                	pushl  (%esi)
 8ff:	57                   	push   %edi
 900:	6a 01                	push   $0x1
 902:	e8 09 fd ff ff       	call   610 <__printf_chk@plt>
 907:	8b 76 04             	mov    0x4(%esi),%esi
 90a:	83 c4 10             	add    $0x10,%esp
 90d:	85 f6                	test   %esi,%esi
 90f:	75 e9                	jne    8fa <dump+0x1e>
 911:	5b                   	pop    %ebx
 912:	5e                   	pop    %esi
 913:	5f                   	pop    %edi
 914:	c3                   	ret    

00000915 <main>:
 915:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 919:	83 e4 f0             	and    $0xfffffff0,%esp
 91c:	ff 71 fc             	pushl  -0x4(%ecx)
 91f:	55                   	push   %ebp
 920:	89 e5                	mov    %esp,%ebp
 922:	57                   	push   %edi
 923:	56                   	push   %esi
 924:	53                   	push   %ebx
 925:	51                   	push   %ecx
 926:	81 ec 28 02 00 00    	sub    $0x228,%esp
 92c:	e8 5f fd ff ff       	call   690 <__x86.get_pc_thunk.bx>
 931:	81 c3 7b 16 00 00    	add    $0x167b,%ebx
 937:	8b 01                	mov    (%ecx),%eax
 939:	8b 51 04             	mov    0x4(%ecx),%edx
 93c:	65 8b 0d 14 00 00 00 	mov    %gs:0x14,%ecx
 943:	89 4d e4             	mov    %ecx,-0x1c(%ebp)
 946:	31 c9                	xor    %ecx,%ecx
 948:	83 f8 02             	cmp    $0x2,%eax
 94b:	74 7e                	je     9cb <main+0xb6>
 94d:	8b 83 48 00 00 00    	mov    0x48(%ebx),%eax
 953:	8b 38                	mov    (%eax),%edi
 955:	83 ec 0c             	sub    $0xc,%esp
 958:	ff b3 5c 00 00 00    	pushl  0x5c(%ebx)
 95e:	e8 83 fe ff ff       	call   7e6 <insert1>
 963:	83 c4 04             	add    $0x4,%esp
 966:	ff b3 6c 00 00 00    	pushl  0x6c(%ebx)
 96c:	e8 c8 fe ff ff       	call   839 <insert2>
 971:	83 c4 04             	add    $0x4,%esp
 974:	ff b3 64 00 00 00    	pushl  0x64(%ebx)
 97a:	e8 67 fe ff ff       	call   7e6 <insert1>
 97f:	83 c4 04             	add    $0x4,%esp
 982:	ff b3 68 00 00 00    	pushl  0x68(%ebx)
 988:	e8 ac fe ff ff       	call   839 <insert2>
 98d:	83 c4 04             	add    $0x4,%esp
 990:	ff b3 60 00 00 00    	pushl  0x60(%ebx)
 996:	e8 9e fe ff ff       	call   839 <insert2>
 99b:	83 c4 04             	add    $0x4,%esp
 99e:	ff b3 60 00 00 00    	pushl  0x60(%ebx)
 9a4:	e8 3d fe ff ff       	call   7e6 <insert1>
 9a9:	83 c4 10             	add    $0x10,%esp
 9ac:	be 01 00 00 00       	mov    $0x1,%esi
 9b1:	8b 83 48 00 00 00    	mov    0x48(%ebx),%eax
 9b7:	89 85 d0 fd ff ff    	mov    %eax,-0x230(%ebp)
 9bd:	8d 83 b4 eb ff ff    	lea    -0x144c(%ebx),%eax
 9c3:	89 85 cc fd ff ff    	mov    %eax,-0x234(%ebp)
 9c9:	eb 3c                	jmp    a07 <main+0xf2>
 9cb:	83 ec 08             	sub    $0x8,%esp
 9ce:	8d 83 b2 eb ff ff    	lea    -0x144e(%ebx),%eax
 9d4:	50                   	push   %eax
 9d5:	ff 72 04             	pushl  0x4(%edx)
 9d8:	e8 23 fc ff ff       	call   600 <fopen@plt>
 9dd:	89 c7                	mov    %eax,%edi
 9df:	83 c4 10             	add    $0x10,%esp
 9e2:	e9 6e ff ff ff       	jmp    955 <main+0x40>
 9e7:	83 ec 04             	sub    $0x4,%esp
 9ea:	56                   	push   %esi
 9eb:	ff b5 cc fd ff ff    	pushl  -0x234(%ebp)
 9f1:	6a 01                	push   $0x1
 9f3:	e8 18 fc ff ff       	call   610 <__printf_chk@plt>
 9f8:	83 c4 10             	add    $0x10,%esp
 9fb:	eb 14                	jmp    a11 <main+0xfc>
 9fd:	e8 8b fd ff ff       	call   78d <bomb>
 a02:	83 fe 05             	cmp    $0x5,%esi
 a05:	7f 57                	jg     a5e <main+0x149>
 a07:	8b 85 d0 fd ff ff    	mov    -0x230(%ebp),%eax
 a0d:	39 38                	cmp    %edi,(%eax)
 a0f:	74 d6                	je     9e7 <main+0xd2>
 a11:	83 ec 04             	sub    $0x4,%esp
 a14:	57                   	push   %edi
 a15:	68 00 02 00 00       	push   $0x200
 a1a:	8d 85 e4 fd ff ff    	lea    -0x21c(%ebp),%eax
 a20:	50                   	push   %eax
 a21:	e8 6a fb ff ff       	call   590 <fgets@plt>
 a26:	83 c4 10             	add    $0x10,%esp
 a29:	85 c0                	test   %eax,%eax
 a2b:	74 d5                	je     a02 <main+0xed>
 a2d:	83 ec 04             	sub    $0x4,%esp
 a30:	6a 0a                	push   $0xa
 a32:	6a 00                	push   $0x0
 a34:	8d 85 e4 fd ff ff    	lea    -0x21c(%ebp),%eax
 a3a:	50                   	push   %eax
 a3b:	e8 e0 fb ff ff       	call   620 <strtol@plt>
 a40:	89 85 d4 fd ff ff    	mov    %eax,-0x22c(%ebp)
 a46:	e8 62 fe ff ff       	call   8ad <pop>
 a4b:	83 c4 10             	add    $0x10,%esp
 a4e:	3b 85 d4 fd ff ff    	cmp    -0x22c(%ebp),%eax
 a54:	75 a7                	jne    9fd <main+0xe8>
 a56:	83 c6 01             	add    $0x1,%esi
 a59:	83 fe 05             	cmp    $0x5,%esi
 a5c:	7e a9                	jle    a07 <main+0xf2>
 a5e:	e8 5a fd ff ff       	call   7bd <success>
 a63:	b8 00 00 00 00       	mov    $0x0,%eax
 a68:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
 a6b:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 a72:	75 0c                	jne    a80 <main+0x16b>
 a74:	8d 65 f0             	lea    -0x10(%ebp),%esp
 a77:	59                   	pop    %ecx
 a78:	5b                   	pop    %ebx
 a79:	5e                   	pop    %esi
 a7a:	5f                   	pop    %edi
 a7b:	5d                   	pop    %ebp
 a7c:	8d 61 fc             	lea    -0x4(%ecx),%esp
 a7f:	c3                   	ret    
 a80:	e8 7b 00 00 00       	call   b00 <__stack_chk_fail_local>
 a85:	66 90                	xchg   %ax,%ax
 a87:	66 90                	xchg   %ax,%ax
 a89:	66 90                	xchg   %ax,%ax
 a8b:	66 90                	xchg   %ax,%ax
 a8d:	66 90                	xchg   %ax,%ax
 a8f:	90                   	nop

00000a90 <__libc_csu_init>:
 a90:	55                   	push   %ebp
 a91:	57                   	push   %edi
 a92:	56                   	push   %esi
 a93:	53                   	push   %ebx
 a94:	e8 f7 fb ff ff       	call   690 <__x86.get_pc_thunk.bx>
 a99:	81 c3 13 15 00 00    	add    $0x1513,%ebx
 a9f:	83 ec 0c             	sub    $0xc,%esp
 aa2:	8b 6c 24 28          	mov    0x28(%esp),%ebp
 aa6:	8d b3 04 ff ff ff    	lea    -0xfc(%ebx),%esi
 aac:	e8 93 fa ff ff       	call   544 <_init>
 ab1:	8d 83 00 ff ff ff    	lea    -0x100(%ebx),%eax
 ab7:	29 c6                	sub    %eax,%esi
 ab9:	c1 fe 02             	sar    $0x2,%esi
 abc:	85 f6                	test   %esi,%esi
 abe:	74 25                	je     ae5 <__libc_csu_init+0x55>
 ac0:	31 ff                	xor    %edi,%edi
 ac2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 ac8:	83 ec 04             	sub    $0x4,%esp
 acb:	55                   	push   %ebp
 acc:	ff 74 24 2c          	pushl  0x2c(%esp)
 ad0:	ff 74 24 2c          	pushl  0x2c(%esp)
 ad4:	ff 94 bb 00 ff ff ff 	call   *-0x100(%ebx,%edi,4)
 adb:	83 c7 01             	add    $0x1,%edi
 ade:	83 c4 10             	add    $0x10,%esp
 ae1:	39 fe                	cmp    %edi,%esi
 ae3:	75 e3                	jne    ac8 <__libc_csu_init+0x38>
 ae5:	83 c4 0c             	add    $0xc,%esp
 ae8:	5b                   	pop    %ebx
 ae9:	5e                   	pop    %esi
 aea:	5f                   	pop    %edi
 aeb:	5d                   	pop    %ebp
 aec:	c3                   	ret    
 aed:	8d 76 00             	lea    0x0(%esi),%esi

00000af0 <__libc_csu_fini>:
 af0:	f3 c3                	repz ret 
 af2:	66 90                	xchg   %ax,%ax
 af4:	66 90                	xchg   %ax,%ax
 af6:	66 90                	xchg   %ax,%ax
 af8:	66 90                	xchg   %ax,%ax
 afa:	66 90                	xchg   %ax,%ax
 afc:	66 90                	xchg   %ax,%ax
 afe:	66 90                	xchg   %ax,%ax

00000b00 <__stack_chk_fail_local>:
 b00:	53                   	push   %ebx
 b01:	e8 8a fb ff ff       	call   690 <__x86.get_pc_thunk.bx>
 b06:	81 c3 a6 14 00 00    	add    $0x14a6,%ebx
 b0c:	83 ec 08             	sub    $0x8,%esp
 b0f:	e8 9c fa ff ff       	call   5b0 <__stack_chk_fail@plt>

Disassembly of section .fini:

00000b14 <_fini>:
 b14:	53                   	push   %ebx
 b15:	83 ec 08             	sub    $0x8,%esp
 b18:	e8 73 fb ff ff       	call   690 <__x86.get_pc_thunk.bx>
 b1d:	81 c3 8f 14 00 00    	add    $0x148f,%ebx
 b23:	83 c4 08             	add    $0x8,%esp
 b26:	5b                   	pop    %ebx
 b27:	c3                   	ret    
