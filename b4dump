
b4:     file format elf32-i386


Disassembly of section .init:

000004dc <_init>:
 4dc:	53                   	push   %ebx
 4dd:	83 ec 08             	sub    $0x8,%esp
 4e0:	e8 0b 01 00 00       	call   5f0 <__x86.get_pc_thunk.bx>
 4e5:	81 c3 d3 1a 00 00    	add    $0x1ad3,%ebx
 4eb:	8b 83 38 00 00 00    	mov    0x38(%ebx),%eax
 4f1:	85 c0                	test   %eax,%eax
 4f3:	74 05                	je     4fa <_init+0x1e>
 4f5:	e8 ae 00 00 00       	call   5a8 <__gmon_start__@plt>
 4fa:	83 c4 08             	add    $0x8,%esp
 4fd:	5b                   	pop    %ebx
 4fe:	c3                   	ret    

Disassembly of section .plt:

00000500 <.plt>:
 500:	ff b3 04 00 00 00    	pushl  0x4(%ebx)
 506:	ff a3 08 00 00 00    	jmp    *0x8(%ebx)
 50c:	00 00                	add    %al,(%eax)
	...

00000510 <fgets@plt>:
 510:	ff a3 0c 00 00 00    	jmp    *0xc(%ebx)
 516:	68 00 00 00 00       	push   $0x0
 51b:	e9 e0 ff ff ff       	jmp    500 <.plt>

00000520 <sleep@plt>:
 520:	ff a3 10 00 00 00    	jmp    *0x10(%ebx)
 526:	68 08 00 00 00       	push   $0x8
 52b:	e9 d0 ff ff ff       	jmp    500 <.plt>

00000530 <__stack_chk_fail@plt>:
 530:	ff a3 14 00 00 00    	jmp    *0x14(%ebx)
 536:	68 10 00 00 00       	push   $0x10
 53b:	e9 c0 ff ff ff       	jmp    500 <.plt>

00000540 <puts@plt>:
 540:	ff a3 18 00 00 00    	jmp    *0x18(%ebx)
 546:	68 18 00 00 00       	push   $0x18
 54b:	e9 b0 ff ff ff       	jmp    500 <.plt>

00000550 <exit@plt>:
 550:	ff a3 1c 00 00 00    	jmp    *0x1c(%ebx)
 556:	68 20 00 00 00       	push   $0x20
 55b:	e9 a0 ff ff ff       	jmp    500 <.plt>

00000560 <__libc_start_main@plt>:
 560:	ff a3 20 00 00 00    	jmp    *0x20(%ebx)
 566:	68 28 00 00 00       	push   $0x28
 56b:	e9 90 ff ff ff       	jmp    500 <.plt>

00000570 <fopen@plt>:
 570:	ff a3 24 00 00 00    	jmp    *0x24(%ebx)
 576:	68 30 00 00 00       	push   $0x30
 57b:	e9 80 ff ff ff       	jmp    500 <.plt>

00000580 <__printf_chk@plt>:
 580:	ff a3 28 00 00 00    	jmp    *0x28(%ebx)
 586:	68 38 00 00 00       	push   $0x38
 58b:	e9 70 ff ff ff       	jmp    500 <.plt>

00000590 <strtol@plt>:
 590:	ff a3 2c 00 00 00    	jmp    *0x2c(%ebx)
 596:	68 40 00 00 00       	push   $0x40
 59b:	e9 60 ff ff ff       	jmp    500 <.plt>

Disassembly of section .plt.got:

000005a0 <__cxa_finalize@plt>:
 5a0:	ff a3 34 00 00 00    	jmp    *0x34(%ebx)
 5a6:	66 90                	xchg   %ax,%ax

000005a8 <__gmon_start__@plt>:
 5a8:	ff a3 38 00 00 00    	jmp    *0x38(%ebx)
 5ae:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

000005b0 <_start>:
 5b0:	31 ed                	xor    %ebp,%ebp
 5b2:	5e                   	pop    %esi
 5b3:	89 e1                	mov    %esp,%ecx
 5b5:	83 e4 f0             	and    $0xfffffff0,%esp
 5b8:	50                   	push   %eax
 5b9:	54                   	push   %esp
 5ba:	52                   	push   %edx
 5bb:	e8 22 00 00 00       	call   5e2 <_start+0x32>
 5c0:	81 c3 f8 19 00 00    	add    $0x19f8,%ebx
 5c6:	8d 83 18 e9 ff ff    	lea    -0x16e8(%ebx),%eax
 5cc:	50                   	push   %eax
 5cd:	8d 83 b8 e8 ff ff    	lea    -0x1748(%ebx),%eax
 5d3:	50                   	push   %eax
 5d4:	51                   	push   %ecx
 5d5:	56                   	push   %esi
 5d6:	ff b3 40 00 00 00    	pushl  0x40(%ebx)
 5dc:	e8 7f ff ff ff       	call   560 <__libc_start_main@plt>
 5e1:	f4                   	hlt    
 5e2:	8b 1c 24             	mov    (%esp),%ebx
 5e5:	c3                   	ret    
 5e6:	66 90                	xchg   %ax,%ax
 5e8:	66 90                	xchg   %ax,%ax
 5ea:	66 90                	xchg   %ax,%ax
 5ec:	66 90                	xchg   %ax,%ax
 5ee:	66 90                	xchg   %ax,%ax

000005f0 <__x86.get_pc_thunk.bx>:
 5f0:	8b 1c 24             	mov    (%esp),%ebx
 5f3:	c3                   	ret    
 5f4:	66 90                	xchg   %ax,%ax
 5f6:	66 90                	xchg   %ax,%ax
 5f8:	66 90                	xchg   %ax,%ax
 5fa:	66 90                	xchg   %ax,%ax
 5fc:	66 90                	xchg   %ax,%ax
 5fe:	66 90                	xchg   %ax,%ax

00000600 <deregister_tm_clones>:
 600:	e8 e4 00 00 00       	call   6e9 <__x86.get_pc_thunk.dx>
 605:	81 c2 b3 19 00 00    	add    $0x19b3,%edx
 60b:	8d 8a 64 00 00 00    	lea    0x64(%edx),%ecx
 611:	8d 82 64 00 00 00    	lea    0x64(%edx),%eax
 617:	39 c8                	cmp    %ecx,%eax
 619:	74 1d                	je     638 <deregister_tm_clones+0x38>
 61b:	8b 82 30 00 00 00    	mov    0x30(%edx),%eax
 621:	85 c0                	test   %eax,%eax
 623:	74 13                	je     638 <deregister_tm_clones+0x38>
 625:	55                   	push   %ebp
 626:	89 e5                	mov    %esp,%ebp
 628:	83 ec 14             	sub    $0x14,%esp
 62b:	51                   	push   %ecx
 62c:	ff d0                	call   *%eax
 62e:	83 c4 10             	add    $0x10,%esp
 631:	c9                   	leave  
 632:	c3                   	ret    
 633:	90                   	nop
 634:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 638:	f3 c3                	repz ret 
 63a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00000640 <register_tm_clones>:
 640:	e8 a4 00 00 00       	call   6e9 <__x86.get_pc_thunk.dx>
 645:	81 c2 73 19 00 00    	add    $0x1973,%edx
 64b:	55                   	push   %ebp
 64c:	8d 8a 64 00 00 00    	lea    0x64(%edx),%ecx
 652:	8d 82 64 00 00 00    	lea    0x64(%edx),%eax
 658:	29 c8                	sub    %ecx,%eax
 65a:	89 e5                	mov    %esp,%ebp
 65c:	53                   	push   %ebx
 65d:	c1 f8 02             	sar    $0x2,%eax
 660:	89 c3                	mov    %eax,%ebx
 662:	83 ec 04             	sub    $0x4,%esp
 665:	c1 eb 1f             	shr    $0x1f,%ebx
 668:	01 d8                	add    %ebx,%eax
 66a:	d1 f8                	sar    %eax
 66c:	74 14                	je     682 <register_tm_clones+0x42>
 66e:	8b 92 44 00 00 00    	mov    0x44(%edx),%edx
 674:	85 d2                	test   %edx,%edx
 676:	74 0a                	je     682 <register_tm_clones+0x42>
 678:	83 ec 08             	sub    $0x8,%esp
 67b:	50                   	push   %eax
 67c:	51                   	push   %ecx
 67d:	ff d2                	call   *%edx
 67f:	83 c4 10             	add    $0x10,%esp
 682:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 685:	c9                   	leave  
 686:	c3                   	ret    
 687:	89 f6                	mov    %esi,%esi
 689:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00000690 <__do_global_dtors_aux>:
 690:	55                   	push   %ebp
 691:	89 e5                	mov    %esp,%ebp
 693:	53                   	push   %ebx
 694:	e8 57 ff ff ff       	call   5f0 <__x86.get_pc_thunk.bx>
 699:	81 c3 1f 19 00 00    	add    $0x191f,%ebx
 69f:	83 ec 04             	sub    $0x4,%esp
 6a2:	80 bb 64 00 00 00 00 	cmpb   $0x0,0x64(%ebx)
 6a9:	75 27                	jne    6d2 <__do_global_dtors_aux+0x42>
 6ab:	8b 83 34 00 00 00    	mov    0x34(%ebx),%eax
 6b1:	85 c0                	test   %eax,%eax
 6b3:	74 11                	je     6c6 <__do_global_dtors_aux+0x36>
 6b5:	83 ec 0c             	sub    $0xc,%esp
 6b8:	ff b3 4c 00 00 00    	pushl  0x4c(%ebx)
 6be:	e8 dd fe ff ff       	call   5a0 <__cxa_finalize@plt>
 6c3:	83 c4 10             	add    $0x10,%esp
 6c6:	e8 35 ff ff ff       	call   600 <deregister_tm_clones>
 6cb:	c6 83 64 00 00 00 01 	movb   $0x1,0x64(%ebx)
 6d2:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 6d5:	c9                   	leave  
 6d6:	c3                   	ret    
 6d7:	89 f6                	mov    %esi,%esi
 6d9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000006e0 <frame_dummy>:
 6e0:	55                   	push   %ebp
 6e1:	89 e5                	mov    %esp,%ebp
 6e3:	5d                   	pop    %ebp
 6e4:	e9 57 ff ff ff       	jmp    640 <register_tm_clones>

000006e9 <__x86.get_pc_thunk.dx>:
 6e9:	8b 14 24             	mov    (%esp),%edx
 6ec:	c3                   	ret    

000006ed <bomb>:
 6ed:	53                   	push   %ebx
 6ee:	83 ec 14             	sub    $0x14,%esp
 6f1:	e8 fa fe ff ff       	call   5f0 <__x86.get_pc_thunk.bx>
 6f6:	81 c3 c2 18 00 00    	add    $0x18c2,%ebx
 6fc:	6a 01                	push   $0x1
 6fe:	e8 1d fe ff ff       	call   520 <sleep@plt>
 703:	8d 83 58 e9 ff ff    	lea    -0x16a8(%ebx),%eax
 709:	89 04 24             	mov    %eax,(%esp)
 70c:	e8 2f fe ff ff       	call   540 <puts@plt>
 711:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 718:	e8 33 fe ff ff       	call   550 <exit@plt>

0000071d <success>:
 71d:	53                   	push   %ebx
 71e:	83 ec 14             	sub    $0x14,%esp
 721:	e8 ca fe ff ff       	call   5f0 <__x86.get_pc_thunk.bx>
 726:	81 c3 92 18 00 00    	add    $0x1892,%ebx
 72c:	6a 01                	push   $0x1
 72e:	e8 ed fd ff ff       	call   520 <sleep@plt>
 733:	8d 83 66 e9 ff ff    	lea    -0x169a(%ebx),%eax
 739:	89 04 24             	mov    %eax,(%esp)
 73c:	e8 ff fd ff ff       	call   540 <puts@plt>
 741:	83 c4 18             	add    $0x18,%esp
 744:	5b                   	pop    %ebx
 745:	c3                   	ret    

00000746 <main>:
 746:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 74a:	83 e4 f0             	and    $0xfffffff0,%esp
 74d:	ff 71 fc             	pushl  -0x4(%ecx)
 750:	55                   	push   %ebp
 751:	89 e5                	mov    %esp,%ebp
 753:	57                   	push   %edi
 754:	56                   	push   %esi
 755:	53                   	push   %ebx
 756:	51                   	push   %ecx
 757:	81 ec 28 02 00 00    	sub    $0x228,%esp
 75d:	e8 8e fe ff ff       	call   5f0 <__x86.get_pc_thunk.bx>
 762:	81 c3 56 18 00 00    	add    $0x1856,%ebx
 768:	8b 01                	mov    (%ecx),%eax
 76a:	8b 51 04             	mov    0x4(%ecx),%edx
 76d:	65 8b 0d 14 00 00 00 	mov    %gs:0x14,%ecx
 774:	89 4d e4             	mov    %ecx,-0x1c(%ebp)
 777:	31 c9                	xor    %ecx,%ecx
 779:	83 f8 02             	cmp    $0x2,%eax
 77c:	74 33                	je     7b1 <main+0x6b>
 77e:	8b 83 3c 00 00 00    	mov    0x3c(%ebx),%eax
 784:	8b 38                	mov    (%eax),%edi
 786:	be 01 00 00 00       	mov    $0x1,%esi
 78b:	8d 83 60 00 00 00    	lea    0x60(%ebx),%eax
 791:	89 85 d4 fd ff ff    	mov    %eax,-0x22c(%ebp)
 797:	8b 83 3c 00 00 00    	mov    0x3c(%ebx),%eax
 79d:	89 85 d0 fd ff ff    	mov    %eax,-0x230(%ebp)
 7a3:	8d 83 71 e9 ff ff    	lea    -0x168f(%ebx),%eax
 7a9:	89 85 cc fd ff ff    	mov    %eax,-0x234(%ebp)
 7af:	eb 39                	jmp    7ea <main+0xa4>
 7b1:	83 ec 08             	sub    $0x8,%esp
 7b4:	8d 83 6f e9 ff ff    	lea    -0x1691(%ebx),%eax
 7ba:	50                   	push   %eax
 7bb:	ff 72 04             	pushl  0x4(%edx)
 7be:	e8 ad fd ff ff       	call   570 <fopen@plt>
 7c3:	89 c7                	mov    %eax,%edi
 7c5:	83 c4 10             	add    $0x10,%esp
 7c8:	eb bc                	jmp    786 <main+0x40>
 7ca:	83 ec 04             	sub    $0x4,%esp
 7cd:	56                   	push   %esi
 7ce:	ff b5 cc fd ff ff    	pushl  -0x234(%ebp)
 7d4:	6a 01                	push   $0x1
 7d6:	e8 a5 fd ff ff       	call   580 <__printf_chk@plt>
 7db:	83 c4 10             	add    $0x10,%esp
 7de:	eb 14                	jmp    7f4 <main+0xae>
 7e0:	e8 08 ff ff ff       	call   6ed <bomb>
 7e5:	83 fe 05             	cmp    $0x5,%esi
 7e8:	7f 55                	jg     83f <main+0xf9>
 7ea:	8b 85 d0 fd ff ff    	mov    -0x230(%ebp),%eax
 7f0:	39 38                	cmp    %edi,(%eax)
 7f2:	74 d6                	je     7ca <main+0x84>
 7f4:	83 ec 04             	sub    $0x4,%esp
 7f7:	57                   	push   %edi
 7f8:	68 00 02 00 00       	push   $0x200
 7fd:	8d 85 e4 fd ff ff    	lea    -0x21c(%ebp),%eax
 803:	50                   	push   %eax
 804:	e8 07 fd ff ff       	call   510 <fgets@plt>
 809:	83 c4 10             	add    $0x10,%esp
 80c:	85 c0                	test   %eax,%eax
 80e:	74 d5                	je     7e5 <main+0x9f>
 810:	83 ec 04             	sub    $0x4,%esp
 813:	6a 0a                	push   $0xa
 815:	6a 00                	push   $0x0
 817:	8d 85 e4 fd ff ff    	lea    -0x21c(%ebp),%eax
 81d:	50                   	push   %eax
 81e:	e8 6d fd ff ff       	call   590 <strtol@plt>
 823:	83 c4 10             	add    $0x10,%esp
 826:	8b 95 d4 fd ff ff    	mov    -0x22c(%ebp),%edx
 82c:	39 02                	cmp    %eax,(%edx)
 82e:	75 b0                	jne    7e0 <main+0x9a>
 830:	83 ad d4 fd ff ff 04 	subl   $0x4,-0x22c(%ebp)
 837:	83 c6 01             	add    $0x1,%esi
 83a:	83 fe 05             	cmp    $0x5,%esi
 83d:	7e ab                	jle    7ea <main+0xa4>
 83f:	e8 d9 fe ff ff       	call   71d <success>
 844:	b8 00 00 00 00       	mov    $0x0,%eax
 849:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
 84c:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 853:	75 0c                	jne    861 <main+0x11b>
 855:	8d 65 f0             	lea    -0x10(%ebp),%esp
 858:	59                   	pop    %ecx
 859:	5b                   	pop    %ebx
 85a:	5e                   	pop    %esi
 85b:	5f                   	pop    %edi
 85c:	5d                   	pop    %ebp
 85d:	8d 61 fc             	lea    -0x4(%ecx),%esp
 860:	c3                   	ret    
 861:	e8 7a 00 00 00       	call   8e0 <__stack_chk_fail_local>
 866:	66 90                	xchg   %ax,%ax
 868:	66 90                	xchg   %ax,%ax
 86a:	66 90                	xchg   %ax,%ax
 86c:	66 90                	xchg   %ax,%ax
 86e:	66 90                	xchg   %ax,%ax

00000870 <__libc_csu_init>:
 870:	55                   	push   %ebp
 871:	57                   	push   %edi
 872:	56                   	push   %esi
 873:	53                   	push   %ebx
 874:	e8 77 fd ff ff       	call   5f0 <__x86.get_pc_thunk.bx>
 879:	81 c3 3f 17 00 00    	add    $0x173f,%ebx
 87f:	83 ec 0c             	sub    $0xc,%esp
 882:	8b 6c 24 28          	mov    0x28(%esp),%ebp
 886:	8d b3 04 ff ff ff    	lea    -0xfc(%ebx),%esi
 88c:	e8 4b fc ff ff       	call   4dc <_init>
 891:	8d 83 00 ff ff ff    	lea    -0x100(%ebx),%eax
 897:	29 c6                	sub    %eax,%esi
 899:	c1 fe 02             	sar    $0x2,%esi
 89c:	85 f6                	test   %esi,%esi
 89e:	74 25                	je     8c5 <__libc_csu_init+0x55>
 8a0:	31 ff                	xor    %edi,%edi
 8a2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8a8:	83 ec 04             	sub    $0x4,%esp
 8ab:	55                   	push   %ebp
 8ac:	ff 74 24 2c          	pushl  0x2c(%esp)
 8b0:	ff 74 24 2c          	pushl  0x2c(%esp)
 8b4:	ff 94 bb 00 ff ff ff 	call   *-0x100(%ebx,%edi,4)
 8bb:	83 c7 01             	add    $0x1,%edi
 8be:	83 c4 10             	add    $0x10,%esp
 8c1:	39 fe                	cmp    %edi,%esi
 8c3:	75 e3                	jne    8a8 <__libc_csu_init+0x38>
 8c5:	83 c4 0c             	add    $0xc,%esp
 8c8:	5b                   	pop    %ebx
 8c9:	5e                   	pop    %esi
 8ca:	5f                   	pop    %edi
 8cb:	5d                   	pop    %ebp
 8cc:	c3                   	ret    
 8cd:	8d 76 00             	lea    0x0(%esi),%esi

000008d0 <__libc_csu_fini>:
 8d0:	f3 c3                	repz ret 
 8d2:	66 90                	xchg   %ax,%ax
 8d4:	66 90                	xchg   %ax,%ax
 8d6:	66 90                	xchg   %ax,%ax
 8d8:	66 90                	xchg   %ax,%ax
 8da:	66 90                	xchg   %ax,%ax
 8dc:	66 90                	xchg   %ax,%ax
 8de:	66 90                	xchg   %ax,%ax

000008e0 <__stack_chk_fail_local>:
 8e0:	53                   	push   %ebx
 8e1:	e8 0a fd ff ff       	call   5f0 <__x86.get_pc_thunk.bx>
 8e6:	81 c3 d2 16 00 00    	add    $0x16d2,%ebx
 8ec:	83 ec 08             	sub    $0x8,%esp
 8ef:	e8 3c fc ff ff       	call   530 <__stack_chk_fail@plt>

Disassembly of section .fini:

000008f4 <_fini>:
 8f4:	53                   	push   %ebx
 8f5:	83 ec 08             	sub    $0x8,%esp
 8f8:	e8 f3 fc ff ff       	call   5f0 <__x86.get_pc_thunk.bx>
 8fd:	81 c3 bb 16 00 00    	add    $0x16bb,%ebx
 903:	83 c4 08             	add    $0x8,%esp
 906:	5b                   	pop    %ebx
 907:	c3                   	ret    
